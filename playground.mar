struct Foo { bar: Bar }
struct Bar {}

fun main(): U8 {
  println(Maybe[U8].some(5_U8) orelse 6_U8)
  println(Maybe[U8].none orelse 6_U8)

  0_U8
}

|fun map[T, X](maybe: Maybe[T], mapper: T -> X): Maybe[X] {
|  return match maybe {
|    case Some t -> Some mapper(t),
|    case None -> None,
|  };
|}
