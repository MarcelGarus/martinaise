struct Foo { bar: Bar }
struct Bar {}

fun main(): U8 {
  switch Maybe[U8].none
  case some(blub) 0_U8
  | case none 0_U8
  | case blub 0_U8
}

|fun map[T, X](maybe: Maybe[T], mapper: T -> X): Maybe[X] {
|  return match maybe {
|    case Some t -> Some mapper(t),
|    case None -> None,
|  };
|}
