struct Foo {}

fun main(): Never {
  printsln("Hello, world!")
  println(foo())
  exit(0_U8)
}

fun foo(): Result[U64, U64] { bar()?.inc().ok[U64, U64]() }
fun bar(): Result[U64, U64] { error[U64, U64](1) }

|fun map[T, X](maybe: Maybe[T], mapper: T -> X): Maybe[X] {
|  return match maybe {
|    case Some t -> Some mapper(t),
|    case None -> None,
|  };
|}
