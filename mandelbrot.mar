import ui.mar

fun main(): Never {
  var zero  = 0.to_float()
  var one   = 1.to_float()
  var two   = 2.to_float()
  var three = 3.to_float()
  var four  = 4.to_float()
  var half = one / two
  var one_and_half = three / two

  var texture = screen_texture()
  var zoom = one
  var move_x = zero - one / two
  var move_y = zero
  var max_iterations = 256

  var width = texture.width.to_float()
  var height = texture.height.to_float()

  loop {
    for x in 0..texture.width do
      for y in 0..texture.height do {
        var pixel_real = one_and_half * {x.to_float() - {width / two}}
          / {half * zoom * width} + move_x
        var pixel_imag = {y.to_float() - {height / two}}
          / {half * zoom * height} + move_y
        var new_real = zero
        var new_imag = zero
        var old_real = zero
        var old_imag = zero
        var i = 0
        loop {
          if i == max_iterations then break
          i = i + 1
          old_real = new_real
          old_imag = new_imag
          new_real = {old_real * old_real} - {old_imag * old_imag} + pixel_real
          new_imag = two * old_real * old_imag + pixel_imag
          if {new_real * new_real} + {new_imag * new_imag} > four then break
        }
        | println("Pixel at {x}, {y} looped {i} times")
        var color = if i == max_iterations
          then black
          else color(
            i % 256,
            i % 256,
            i % 256,
          )
        texture.&.draw_pixel(x @ y, color)
      }
    texture.show()
    zoom.& *= {11.to_float() / 10.to_float()}
  }
}
