fun card_score(card: Slice[U8]): U64 {
  var prefix_and_turns = card.split(": ")
  var all_numbers = prefix_and_turns.get(1).split(" | ")

  | TODO: use hash set when implemented
  var winning_numbers = vec[U64]()
  for num in all_numbers.get(0).split(" ") do
    if not(num.is_empty()) then winning_numbers.&.push(num.parse_U64())
  var my_numbers = vec[U64]()
  for num in all_numbers.get(1).split(" ") do
    if not(num.is_empty()) then my_numbers.&.push(num.parse_U64())
  println(winning_numbers)

  var score = 0
  for num in my_numbers do {
    var wins = false()
    for winning in winning_numbers do
      if num.equals(winning) then wins = true()
    if wins
    then score = if score.equals(0) then 1 else score.multiply(2)
  }

  score
}

fun main(): Never {
  var sum = 0
  for line in read_file("advent/day4.big").lines() do
    sum = sum.add(line.card_score())
  println(sum)
  exit(0:U8)
}
