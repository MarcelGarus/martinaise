struct Node {
  left: Slice[U8],
  right: Slice[U8],
}
fun main(): U8 {
  var lines = read_file("advent/day8.big").lines()
  var directions = lines.get_ref(0)
  var nodes = map[Slice[U8], Node]()

  for line in &lines.subslice(2).iter() do {
    var name = line.subslice(0, 3)
    var left = line.subslice(7, 10)
    var right = line.subslice(12, 15)
    nodes.&.insert(name, Node.{ left = left, right = right })
  }

  var step = 0
  var current = "AAA"
  loop {
    if current.equals("ZZZ") then break
    var direction = directions.get(step.modulo(directions.len))
    if direction.equals('L) then current = nodes.get(current).unwrap().left
    if direction.equals('R) then current = nodes.get(current).unwrap().right
    step = step.inc()
    printsln(current)
  }
  println(step)

  0_U8
}
